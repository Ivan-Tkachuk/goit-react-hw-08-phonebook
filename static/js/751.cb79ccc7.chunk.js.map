{"version":3,"file":"static/js/751.cb79ccc7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  width: 400px;\n\n  margin: 0px;\n  padding: 10px;\n\n  border: 2px solid black;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  width: 200px;\n`;\n\nexport const Field = styled.input`\n  margin-top: 5px;\n  outline: grey;\n  border: 1px solid grey;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 2px rgba(0, 144, 237, 0.4);\n    border: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 5px 10px;\n\n  font-size: 12px;\n  font-weight: 600;\n\n  width: 120px;\n\n  &:active {\n    background-color: blue;\n    border: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Form, FormField, Field, Button } from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\n\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    contacts.filter(contact => contact.name === name).length\n      ? alert(`${newContact.name} is already in contacts`)\n      : dispatch(addContact(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormField>\n        Name\n        <Field\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter contact name...\"\n          value={name}\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        Phone\n        <Field\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number...\"\n          value={number}\n          onChange={handleChange}\n        />\n      </FormField>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  position: relative;\n  left: 50%;\n  transform: translate(-50%);\n\n  list-style: disc;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 5px 10px;\n  margin-left: 20px;\n\n  font-size: 12px;\n  font-weight: 600;\n\n  width: 60px;\n\n  &:active {\n    background-color: blue;\n    border: none;\n  }\n`;\n\nexport const Text = styled.p`\n  display: inline-block;\n  margin: 0;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { List, Text } from './ContactList.styled';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}\n          variant=\"outlined\" startIcon={<DeleteIcon />}>\n            Delete\n          </Button>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  width: 200px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  outline: grey;\n  border: 1px solid grey;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 2px rgba(0, 144, 237, 0.4);\n    border: transparent;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    const { value } = e.currentTarget;\n    dispatch(setStatusFilter(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by Name{' '}\n      <Input type=\"text\" value={filter} name=\"filter\" onChange={changeFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\n// import { Container } from './App.styled';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n       <title>Phonebook</title>\n       </Helmet>\n       <h1>Phonebook</h1>\n       <ContactForm />\n       <h2>Contacts</h2>\n       <Filter />\n       <div>{isLoading && 'Request in progress...'}</div>\n       <ContactList />\n       </HelmetProvider>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","styled","FormField","Field","Button","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","e","currentTarget","value","onSubmit","event","preventDefault","newContact","id","nanoid","length","alert","addContact","type","pattern","title","required","placeholder","onChange","List","Text","map","onClick","deleteContact","variant","startIcon","Delete","Label","Input","setStatusFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}